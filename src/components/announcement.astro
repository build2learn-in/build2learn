---
import { getCollection } from 'astro:content';

const events = await getCollection('event');

// Get current date and time in IST timezone
const now = new Date();
const istTimeString = now.toLocaleString('en-US', { timeZone: 'Asia/Kolkata' });
const istTime = new Date(istTimeString);
const currentDateIST = new Date(
  istTime.getFullYear(),
  istTime.getMonth(),
  istTime.getDate()
);
const currentTimeIST = istTime.getHours() * 60 + istTime.getMinutes(); // Current time in minutes

// Get the next upcoming event or today's event
const upcomingEvent = events
  .map((event: any) => ({
    ...event,
    eventDate: new Date(event.data.eventDate),
  }))
  .filter((event: any) => {
    const eventDateIST = new Date(
      event.eventDate.getFullYear(),
      event.eventDate.getMonth(),
      event.eventDate.getDate()
    );
    return eventDateIST.getTime() >= currentDateIST.getTime();
  })
  .sort((a: any, b: any) => a.eventDate.getTime() - b.eventDate.getTime())[0];

// Check if the upcoming event is today - simplified comparison
const isToday =
  upcomingEvent &&
  upcomingEvent.eventDate.toDateString() === currentDateIST.toDateString();

// Debug logging
console.log('Current IST date:', currentDateIST);
console.log('Current IST date string:', currentDateIST.toDateString());
console.log('Upcoming event:', upcomingEvent?.data.title);
console.log('Event date:', upcomingEvent?.eventDate);
console.log('Event date string:', upcomingEvent?.eventDate.toDateString());
console.log(
  'Event date IST:',
  new Date(
    upcomingEvent?.eventDate.getFullYear(),
    upcomingEvent?.eventDate.getMonth(),
    upcomingEvent?.eventDate.getDate()
  )
);
console.log('Is today:', isToday);
console.log(
  'Date comparison:',
  new Date(
    upcomingEvent?.eventDate.getFullYear(),
    upcomingEvent?.eventDate.getMonth(),
    upcomingEvent?.eventDate.getDate()
  ).getTime(),
  '===',
  currentDateIST.getTime()
);

const formatEventDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    weekday: 'long',
    month: 'long',
    day: 'numeric',
  });
};
---

{
  upcomingEvent && (
    <section
      class={`relative overflow-hidden py-6 px-4 sm:px-6 lg:px-8 ${isToday ? 'bg-gradient-to-r from-emerald-500 via-green-500 to-teal-500' : 'bg-gradient-to-r from-blue-500 via-blue-600 to-indigo-600'}`}
    >
      {/* Simplified background pattern */}
      <div class="absolute inset-0 opacity-5">
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white to-transparent" />
      </div>

      <div class="relative container mx-auto">
        <div class="flex flex-col lg:flex-row items-center justify-between gap-6">
          {/* Main content */}
          <div class="text-center lg:text-left">
            <div class="inline-flex items-center px-4 py-2 rounded-full bg-white/20 backdrop-blur-sm border border-white/30 mb-4">
              <div class="w-3 h-3 bg-white rounded-full animate-pulse mr-3" />
              <span class="text-white font-semibold text-sm tracking-wide uppercase">
                {isToday ? 'HAPPENING NOW' : 'UPCOMING EVENT'}
              </span>
            </div>

            <h2 class="text-2xl lg:text-3xl font-bold text-white mb-2 leading-tight">
              {upcomingEvent.data.title} Meetup
            </h2>

            <div class="flex flex-col sm:flex-row sm:items-center gap-4 text-white/90">
              <div class="flex items-center gap-2">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                  <path
                    fill-rule="evenodd"
                    d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                    clip-rule="evenodd"
                  />
                </svg>
                <span class="font-medium">
                  {formatEventDate(upcomingEvent.eventDate)}
                </span>
              </div>

              <div class="flex items-center gap-2">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z"
                    clip-rule="evenodd"
                  />
                </svg>
                <span class="font-medium">
                  {upcomingEvent.data.eventTime} IST
                </span>
              </div>

              <div class="flex items-center gap-2">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                  <path
                    fill-rule="evenodd"
                    d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"
                    clip-rule="evenodd"
                  />
                </svg>
                <span class="font-medium">{upcomingEvent.data.venue}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
